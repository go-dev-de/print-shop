#!/usr/bin/env node

// –°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–Ω–¥–µ–∫—Å–æ–≤ –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º —Ç–∞–±–ª–∏—Ü–∞–º YDB
// –ó–∞–ø—É—Å–∫: node scripts/add-indexes.mjs

import { getYdbDriver } from '../src/lib/ydb/client.js';

const indexes = [
  // –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã products (–∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏)
  {
    table: 'products',
    name: 'products_section',
    columns: ['section'],
    description: '–ò–Ω–¥–µ–∫—Å –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ —Ä–∞–∑–¥–µ–ª—É —Ç–æ–≤–∞—Ä–æ–≤'
  },
  {
    table: 'products',
    name: 'products_created_at',
    columns: ['created_at'],
    description: '–ò–Ω–¥–µ–∫—Å –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –ø–æ –¥–∞—Ç–µ —Å–æ–∑–¥–∞–Ω–∏—è'
  },
  {
    table: 'products',
    name: 'products_name',
    columns: ['name'],
    description: '–ò–Ω–¥–µ–∫—Å –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é —Ç–æ–≤–∞—Ä–∞'
  },
  {
    table: 'products',
    name: 'products_base_price',
    columns: ['base_price'],
    description: '–ò–Ω–¥–µ–∫—Å –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ —Ü–µ–Ω–µ'
  },
  {
    table: 'products',
    name: 'products_section_created_at',
    columns: ['section', 'created_at'],
    description: '–°–æ—Å—Ç–∞–≤–Ω–æ–π –∏–Ω–¥–µ–∫—Å: —Ä–∞–∑–¥–µ–ª + –¥–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è'
  },

  // –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã sections
  {
    table: 'sections',
    name: 'sections_name',
    columns: ['name'],
    description: '–ò–Ω–¥–µ–∫—Å –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é —Ä–∞–∑–¥–µ–ª–∞'
  },
  {
    table: 'sections',
    name: 'sections_created_at',
    columns: ['created_at'],
    description: '–ò–Ω–¥–µ–∫—Å –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –ø–æ –¥–∞—Ç–µ —Å–æ–∑–¥–∞–Ω–∏—è'
  },

  // –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã orders
  {
    table: 'orders',
    name: 'orders_user_id',
    columns: ['user_id'],
    description: '–ò–Ω–¥–µ–∫—Å –¥–ª—è –ø–æ–∏—Å–∫–∞ –∑–∞–∫–∞–∑–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'
  },
  {
    table: 'orders',
    name: 'orders_status',
    columns: ['status'],
    description: '–ò–Ω–¥–µ–∫—Å –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ —Å—Ç–∞—Ç—É—Å—É –∑–∞–∫–∞–∑–∞'
  },
  {
    table: 'orders',
    name: 'orders_created_at',
    columns: ['created_at'],
    description: '–ò–Ω–¥–µ–∫—Å –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –ø–æ –¥–∞—Ç–µ —Å–æ–∑–¥–∞–Ω–∏—è'
  },

  // –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã reviews
  {
    table: 'reviews',
    name: 'reviews_status',
    columns: ['status'],
    description: '–ò–Ω–¥–µ–∫—Å –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ —Å—Ç–∞—Ç—É—Å—É –æ—Ç–∑—ã–≤–∞'
  },
  {
    table: 'reviews',
    name: 'reviews_rating',
    columns: ['rating'],
    description: '–ò–Ω–¥–µ–∫—Å –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É'
  },
  {
    table: 'reviews',
    name: 'reviews_created_at',
    columns: ['created_at'],
    description: '–ò–Ω–¥–µ–∫—Å –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –ø–æ –¥–∞—Ç–µ —Å–æ–∑–¥–∞–Ω–∏—è'
  },

  // –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã discounts
  {
    table: 'discounts',
    name: 'discounts_is_active',
    columns: ['is_active'],
    description: '–ò–Ω–¥–µ–∫—Å –¥–ª—è –ø–æ–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–∫–∏–¥–æ–∫'
  },
  {
    table: 'discounts',
    name: 'discounts_created_at',
    columns: ['created_at'],
    description: '–ò–Ω–¥–µ–∫—Å –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –ø–æ –¥–∞—Ç–µ —Å–æ–∑–¥–∞–Ω–∏—è'
  }
];

async function addIndexes() {
  console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏...');
  
  try {
    const driver = await getYdbDriver();
    const db = driver.database;
    
    console.log(`üìä –ü–æ–¥–∫–ª—é—á–∏–ª–∏—Å—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: ${db}`);
    
    let successCount = 0;
    let errorCount = 0;
    
    for (const index of indexes) {
      try {
        console.log(`\nüîß –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω–¥–µ–∫—Å: ${index.name} –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã ${index.table}`);
        console.log(`   –û–ø–∏—Å–∞–Ω–∏–µ: ${index.description}`);
        
        const columnsStr = index.columns.join(', ');
        const query = `CREATE INDEX IF NOT EXISTS \`${index.name}\` ON \`${db}/${index.table}\` (${columnsStr});`;
        
        console.log(`   SQL: ${query}`);
        
        await driver.tableClient.withSession(async (session) => {
          await session.executeQuery(query);
        });
        
        console.log(`   ‚úÖ –ò–Ω–¥–µ–∫—Å ${index.name} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω`);
        successCount++;
        
      } catch (error) {
        console.error(`   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∏–Ω–¥–µ–∫—Å–∞ ${index.name}:`, error.message);
        errorCount++;
      }
    }
    
    console.log(`\nüéâ –ó–∞–≤–µ—Ä—à–µ–Ω–æ!`);
    console.log(`   ‚úÖ –£—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ: ${successCount} –∏–Ω–¥–µ–∫—Å–æ–≤`);
    console.log(`   ‚ùå –û—à–∏–±–æ–∫: ${errorCount} –∏–Ω–¥–µ–∫—Å–æ–≤`);
    
    if (successCount > 0) {
      console.log(`\nüí° –¢–µ–ø–µ—Ä—å –∑–∞–ø—Ä–æ—Å—ã –∫ —Ç–∞–±–ª–∏—Ü–µ products –¥–æ–ª–∂–Ω—ã –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –±—ã—Å—Ç—Ä–µ–µ!`);
      console.log(`   - –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Ä–∞–∑–¥–µ–ª—É: —É—Å–∫–æ—Ä–µ–Ω–∏–µ –≤ 10-100 —Ä–∞–∑`);
      console.log(`   - –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –¥–∞—Ç–µ: —É—Å–∫–æ—Ä–µ–Ω–∏–µ –≤ 5-20 —Ä–∞–∑`);
      console.log(`   - –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é: —É—Å–∫–æ—Ä–µ–Ω–∏–µ –≤ 3-10 —Ä–∞–∑`);
    }
    
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
addIndexes().catch(console.error); 